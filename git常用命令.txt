git config --global user.name "hufeng"
git config --global user.email "xxx@qq.com"

查看git配置
git config --list

查看用户名密码
git config user.name
git config user.email
git config user.password


git pull   拉取代码

git add .   提交所有修改到工作区

git commit -m "注释" 提交工作区的代码到本地仓库

git push 将本地仓库推送到远程仓库

git branch -r  查看远程分支
git branch -a 查看所有分支
git branch 查看本地分支

修改commit注释
1.git commit --amend
2.输入新的注释
3.esc退出vim编辑模式
4.:wq保存已编辑的注释
5.git push 提交

撤回commit
git reset --soft HEAD^
这样就能成功的撤回你刚刚的commit操作。

HEAD^的意思是上一个版本，也可以写成HEAD~1
如果你进行了2次commit，想都撤回，可以使用HEAD~2
注意，这个命令仅仅是撤回commit操作，写的代码仍然保留

拓展：

–mixed
意思是：不删除工作空间改动代码，撤销commit，并且撤销git add . 操作
这个为默认参数，git reset --mixed HEAD^ 和 git reset HEAD^ 效果是一样的。

–soft
不删除工作空间改动代码，撤销commit，不撤销git add .

–hard
删除工作空间改动代码，撤销commit，撤销git add .
注意完成这个操作后，会删除工作空间代码！！！恢复到上一次的commit状态。慎重！！！


合并分支
1. 对当前dev分支的本地代码进行储存
  1.1  如当前代码未编辑完，不想提交，即可将当前dev分支的代码暂存
   git stash save '暂存描述'
  1.2  如当前代码已编辑完，即可将当前代码提交到本地仓库
  // 添加当前目录下的所有文件到暂存区
  git add .
 // 提交暂存区的文件
 git commit -m '提交描述' 

2. 切换到master分支 将master最新代码，拉取到本地
// 切到master  
git checkout master
// 拉取master远程代码
git pull origin master

3. 切换到dev分支，并将master最新代码合并至dev分支上。
// 切换到feature分支
git checkout dev
// 将master最新代码合并至dev分支
git merge master

4. 将dev分支代码提交至远程仓库(如没有提交的代码，此步骤跳过)
// 将文件提交到dev远程仓库
git push -u origin dev

5.  dev分支合并到master分支
// 切到master
git checkout master
// dev分支的代码合并到master分支
git merge dev 
// 查看状态
git status 
// 提交远程
git push origin master

6. 如有暂存，切换至dev分支，将暂存区文件回滚
// 切到dev
git checkout dev
// 回滚第一个暂存区
git stash pop

其他常用命令
// 更新远程分支列表
git remote update origin —prune
// 查看所有分支
git branch -a
// 删除远程分支-dev
git push origin --delete dev
// 删除本地分支-dev
git branch -d dev
// 创建新的分支
git checkout -b 'dev'
// 将创建的本地分支推送到远程仓库
git push origin dev
// 查看本地分支
git branch
// 查看所有的分支
git branch -a
//同步远程分支
git fetch




生成ssh
ssh-keygen -t rsa -C "xxx@qq.com"

查看公钥和私钥
cat ~/.ssh/id_rsa.pub

PS：如果忘了Git密码，放弃如何修改，选择删除后重新创建一个新的SSH密钥吧。据调查Git为了保证安全并没有重新修改密码的功能

1、首页：查看本地是否有.ssh文件
找到 Git Bash 打开后 运行 cd ~/.ssh 查看是否有该文件
如果本地有ssh密钥的话会有id_rsa、id_rsa.pub、known_hosts等文件。
如果没有的话运行上步骤命令就会找不到文件的提示
2、也可以删除ssh
复制并运行 rm -rf ~/.ssh/* 把现有的ssh key都删掉，这句命令行如果你多打一个空格，可能就要重装系统了，建议复制运行。
3、运行 ssh-keygen -t rsa -b 4096 -C “你的邮箱” ，注意填写你的真实邮箱。
4、按回车三次
5、运行 cat ~/.ssh/id_rsa.pub ，得到一串东西，完整的复制这串东西
6、打开GitHub->点击头像->setting->SSH adn GPG keys->New SSh key
7、输入你的title、把刚才复制的那段粘贴到key中保存
8、运行 ssh -T git@github.com ，你可能会看到这样的提示。
9、输入yse
10、然后如果你看到 Permission denied (publickey). 就说明你失败了，请回到第 1 步重来，是的，回到第 1步重来；
如果你看到 Hi FrankFang! You’ve successfully authenticated, but GitHub does not provide shell access.
那就说明你成功了